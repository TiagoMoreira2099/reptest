(function ($, Drupal) {
    Drupal.behaviors.tree = {
      attach: function (context, settings) {
        // Map to store node identifiers and their URIs
        const nodeUriMap = new Map();
        let nodeIdCounter = 0;
  
        // Event delegation for dynamically loading children
        $(document).on('click', '.node', function () {
          const $node = $(this);
          const nodeId = $node.data('id');
          const nodeUri = nodeUriMap.get(nodeId);
          const encodedUri = toBase64(nodeUri);
          const $childrenContainer = $(`#children-${nodeId}`);
          const ajaxUrl = 'http://localhost/rep/getchildren/' + encodedUri;

          console.log(nodeUri);
          console.log(encodedUri);
          console.log(ajaxUrl);
  
          // Load children only if not already loaded
          if ($childrenContainer.children().length === 0) {
            $.ajax({
              url: ajaxUrl,
              type: 'GET',
              //data: { nodeUri: nodeUri },
              dataType: 'json',
              success: function (data) {
                if (Array.isArray(data) && data.length > 0) {
                  console.log(data);
                  $childrenContainer.html(renderTreeNodes(data));
                } else {
                  $childrenContainer.html('<p>No children available.</p>');
                }
              },
              error: function (jqXHR, textStatus, errorThrown) {
                console.error('Failed to fetch data:', textStatus, errorThrown);
              }
            });
          }
        });
  
        function renderTreeNodes(nodes) {
          return '<ul>' + nodes.map(renderNode).join('') + '</ul>';
        }
  
        function renderNode(node) {
          const nodeId = `node-${nodeIdCounter++}`;
          nodeUriMap.set(nodeId, node.uri); // Map nodeId to nodeUri
  
          let nodeHtml = '<li>';
          nodeHtml += `<span class="node" data-id="${nodeId}">${node.label || node.name}</span>`;
          if (node.children && node.children.length > 0) {
            nodeHtml += `<div class="children" id="children-${nodeId}">`;
            nodeHtml += renderTreeNodes(node.children);
            nodeHtml += '</div>';
          }
          nodeHtml += '</li>';
          return nodeHtml;
        }

        function toBase64(str) {
            return btoa(unescape(encodeURIComponent(str)));
        }
      }
    };
  })(jQuery, Drupal);
  